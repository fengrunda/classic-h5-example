.float (@float){
	float:			@float;
}
.float (@float, @important){
	float:			@float !important;
}
.clear (@clear){
	clear:			@clear;
}

.display (@display){
	display:		@display;
}
.display (@display, @important){
	display:		@display !important;
}

.visibility (@v){
	visibility:		@v;
}
.visibility (@v, @important){
	visibility:		@v !important;
}

.overflow (@o){
	overflow:		@o;
}
.overflow (@o, @important){
	overflow:		@o !important;
}

.position(@p){
	position:		@p;
}
.position(@p, @important){
	position:		@p !important;
}

.box-sizing (@b){
	box-sizing:		@b;
}
.box-sizing (@b, @important){
	box-sizing:		@b !important;
}

.align (@a){
	text-align:		@a;
}
.align (@a, @important){
	text-align:		@a !important;
}

.vertical-align (@v){
	vertical-align:	@v;
}
.vertical-align (@v, @important){
	vertical-align:	@v !important;
}

.cursor (@c){
	cursor:			@c;
}
.cursor (@c, @important){
	cursor:			@c !important;
}

.columns (@count){
			column-count:	@count;
		-moz-column-count:	@count;
	-webkit-column-count:	@count;
}

.coloredBox (@color){
	border-color:	@color;

	background:		fade(@color,30%);
}
.coloredBox (@borderColor, @backgroundColor){
	border-color:	@borderColor;

	background:		@backgroundColor;
}

.square (@size){
	width:			@size;
	height:			@size;
}

.bg(@start:#00ffff, @end :#9fffff) {
  background: -webkit-gradient(linear,0 0, 0 100%,from(@start),to(@end));
  background: -moz-linear-gradient(top,@start ,@end);
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=@start , endColorstr=@end ,grandientType=0);
}

.getImgSize(@imgUrl, @scale:1) {
  @imgW: unit(image-width(@imgUrl),px) * @scale;
  @imgH: unit(image-height(@imgUrl),px) * @scale;
}

.bgImg(@imgUrl, @scale:1) {
  @url: url("@{imgUrl}?scale=@{scale}");
  @imgW: unit(image-width(@imgUrl),px) * @scale;
  @imgH: unit(image-height(@imgUrl),px) * @scale;
  background-image: @url;
  background-repeat: no-repeat;
  background-size: @imgW @imgH;
  width: @imgW;
  height: @imgH;
}

.bgSprite(h) {
  position: absolute;
  left: 50%;
  margin-left: -@imgW/2;
}

.bgSprite(v) {
  position: absolute;
  top: 50%;
  margin-top: -@imgH/2;
}

.bgSprite(hv) {
  position: absolute;
  top: 50%;
  margin-top: -@imgH/2;
  left: 50%;
  margin-left: -@imgW/2;
}

.origin(@x, @y) {
  transform-origin: @x @y;
}

.rotate(@deg) {
  transform: rotate(@deg);
}

.skew(@degX, @degY) {
  transform: skew(@degX,@degY);
}

.translate(@x, @y) {
  transform: translate(@x, @y);
}

.scale(@x, @y) {
  transform: scale(@x, @y);
}

.matrix(@a, @b, @c, @d, @e, @f) {
  transform: matrix(@a,@b,@c,@d,@e,@f);
}

.duration(@second) {
  animation-duration: @second;
}

.delay(@second) {
  animation-delay: @second;
}

.arrow-up(@borderWidth, @color) {
  width: 0;
  height: 0;
  border-left: @borderWidth solid transparent;
  border-right: @borderWidth solid transparent;
  border-bottom: @borderWidth solid @color;
}

.arrow-down(@borderWidth, @color) {
  width: 0;
  height: 0;
  border-left: @borderWidth solid transparent;
  border-right: @borderWidth solid transparent;
  border-top: @borderWidth solid @color;
}

.arrow-left(@borderWidth, @color) {
  width: 0;
  height: 0;
  border-top: @borderWidth solid transparent;
  border-bottom: @borderWidth solid transparent;
  border-right: @borderWidth solid @color;
}

.arrow-right(@borderWidth, @color) {
  width: 0;
  height: 0;
  border-top: @borderWidth solid transparent;
  border-bottom: @borderWidth solid transparent;
  border-left: @borderWidth solid @color;
}

.bgBorder(@url) {
  @imgUrl: @url;
  @imgW: unit(image-width(@imgUrl),px);
  @imgH: unit(image-height(@imgUrl),px);
  background-image: url("@imgUrl");
  background-position: 0 0;
  background-size: @imgW @imgH;
}

.line-clamp(@lines, @line-height:1.6em) {
  text-overflow: ellipsis;
  display: -webkit-box;
  /*! autoprefixer: off */
  -webkit-box-orient: vertical;
  /* autoprefixer: on */
  -webkit-line-clamp: @lines; // number of lines to show
  overflow: hidden;
  line-height: @line-height;
  max-height: @line-height * @lines;
}

.scale-1px(@radius1:0, @radius2:0, @radius3:0, @radius4:0) {
  position: relative;
  border-width: 0;
  border-radius: unit(@radius1, px) unit(@radius2, px) unit(@radius3, px) unit(@radius4, px);
  .before(@dpr) {
    &::before {
      content: "";
      pointer-events: none;
      position: absolute;
      top: 0;
      left: 0;
      border-style: inherit;
      border-color: inherit;
      border-width: 1px;
      border-radius: unit(@radius1 * @dpr, px) unit(@radius2 * @dpr, px) unit(@radius3 * @dpr, px) unit(@radius4 * @dpr, px);
      box-sizing: border-box;
      width: 100% * @dpr;
      height: 100% * @dpr;
      transform: scale(1 / @dpr);
      transform-origin: left top;
      z-index: 0;
    }
  }
  @media only screen and (-webkit-device-pixel-ratio: 1) {
    @dpr: 1;
    border-width: 1px;
  }
  @media only screen and (-webkit-device-pixel-ratio: 2) {
    @dpr: 2;
    .before(@dpr);
  }
  @media only screen and (-webkit-device-pixel-ratio: 3) {
    @dpr: 3;
    .before(@dpr);
  }
}
